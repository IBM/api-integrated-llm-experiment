{"data": [{"sample_id": 10, "dataset_name": "disney", "input": "Among the movies directed by Wolfgang Reitherman, which one of them was the most popular?", "output": [{"name": "select_data_equal_to", "arguments": {"data_source": "$starting_table_var$", "key_name": "director_director", "value": "Wolfgang Reitherman"}, "label": "FILTERED_DF"}, {"name": "sort_data_descending", "arguments": {"data_source": "$FILTERED_DF$", "key_name": "movies_total_gross_total_gross"}, "label": "SORTED_DF"}, {"name": "get_movies_total_gross_movie_titles", "arguments": {"data_source": "$SORTED_DF$"}, "label": "SELECT_COL_0"}, {"name": "truncate", "arguments": {"truncate_array": "$SELECT_COL_0$", "n": 1}, "label": "LIMIT"}], "tools": [{"description": "Filters rows where the column's value is not equal to the given value.", "name": "select_data_not_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Sort data by the values associated with the chosen key='key_name' If the input data is list-like, returns the sorted list. If the input data is tabular, returns the table with rows sorted by the values in column 'key_name'. If the data is grouped tables, then sort the groups by the value in 'key_name'", "name": "sort_data_ascending", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "name of key to sort by", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "ascending": {"description": "whether to sort by ascending order", "type": "boolean"}}}, {"description": "Lookup data movies_total_gross_release_date: release date", "name": "get_movies_total_gross_release_dates", "arguments": {}}, {"description": "Return the first `n` elements of a list-like object.", "name": "truncate", "arguments": {"truncate_array": {"description": "A list-like object.", "type": "object"}, "n": {"description": "The number of rows/elements to return.", "type": "integer"}}}, {"description": "Filters rows where the column's value is equal to the given value.", "name": "select_data_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Filters rows where the column's value contains the given value (applies to strings).", "name": "select_data_contains", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Lookup data movies_total_gross_movie_title: movie title", "name": "get_movies_total_gross_movie_titles", "arguments": {}}, {"description": "Sort data by the values associated with the chosen key='key_name' If the input data is list-like, returns the sorted list. If the input data is tabular, returns the table with rows sorted by the values in column 'key_name'. If the data is grouped tables, then sort the groups by the value in 'key_name'", "name": "sort_data_descending", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "name of key to sort by", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "ascending": {"description": "whether to sort by ascending order", "type": "boolean"}}}], "key_values_and_descriptions": [{"key_name": "director_name", "description": "unique movie name", "dtype": "string"}, {"key_name": "director_director", "description": "the name of the director", "dtype": "string"}, {"key_name": "movies_total_gross_movie_title", "description": "movie title", "dtype": "string"}, {"key_name": "movies_total_gross_release_date", "description": "release date", "dtype": "string"}, {"key_name": "movies_total_gross_genre", "description": "genre of the movie", "dtype": "string"}, {"key_name": "movies_total_gross_MPAA_rating", "description": "Motion Picture Association of America of the disney movie", "dtype": "string"}, {"key_name": "movies_total_gross_total_gross", "description": "The total gross of the movie.", "dtype": "string"}, {"key_name": "movies_total_gross_inflation_adjusted_gross", "description": "The inflation-adjusted gross of the movie.", "dtype": "string"}], "gold_answer": "The Aristocats"}, {"sample_id": 39, "dataset_name": "disney", "input": "How many PG adventure movies did Ron Clements direct?", "output": [{"name": "select_data_equal_to", "arguments": {"data_source": "$starting_table_var$", "key_name": "director_director", "value": "Ron Clements"}, "label": "FILTERED_DF"}, {"name": "select_data_equal_to", "arguments": {"data_source": "$FILTERED_DF$", "key_name": "movies_total_gross_MPAA_rating", "value": "PG"}, "label": "FILTERED_DF"}, {"name": "select_data_equal_to", "arguments": {"data_source": "$FILTERED_DF$", "key_name": "movies_total_gross_genre", "value": "Adventure"}, "label": "FILTERED_DF"}, {"name": "compute_data_count", "arguments": {"data_source": "$FILTERED_DF$", "key_name": "", "distinct": false}, "label": "COUNT"}], "tools": [{"description": "Filters rows where the column's value is not equal to the given value.", "name": "select_data_not_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Lookup data director_name: unique movie name", "name": "get_director_names", "arguments": {}}, {"description": "Filters rows where the column's value is equal to the given value.", "name": "select_data_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Transform list of string values by taking substrings", "name": "transform_data_to_substring", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "name of string valued key to transform", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "start_index": {"description": "start of substring", "type": "integer"}, "end_index": {"description": "end of substring, must be >= start_index", "type": "integer"}}}, {"description": "Return the mean of values in a list.", "name": "compute_data_mean", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}}}, {"description": "Filters rows where the column's value is greater than the given value.", "name": "select_data_greater_than", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Return the sum of values in a list.", "name": "compute_data_sum", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}}}, {"description": "Return the number of elements in a list.", "name": "compute_data_count", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}}}], "key_values_and_descriptions": [{"key_name": "director_name", "description": "unique movie name", "dtype": "string"}, {"key_name": "director_director", "description": "the name of the director", "dtype": "string"}, {"key_name": "movies_total_gross_movie_title", "description": "movie title", "dtype": "string"}, {"key_name": "movies_total_gross_release_date", "description": "release date", "dtype": "string"}, {"key_name": "movies_total_gross_genre", "description": "genre of the movie", "dtype": "string"}, {"key_name": "movies_total_gross_MPAA_rating", "description": "Motion Picture Association of America of the disney movie", "dtype": "string"}, {"key_name": "movies_total_gross_total_gross", "description": "The total gross of the movie.", "dtype": "string"}, {"key_name": "movies_total_gross_inflation_adjusted_gross", "description": "The inflation-adjusted gross of the movie.", "dtype": "string"}], "gold_answer": 2}, {"sample_id": 61, "dataset_name": "disney", "input": "List the movie titles directed by Jack Kinney.", "output": [{"name": "select_data_equal_to", "arguments": {"data_source": "$starting_table_var$", "key_name": "director", "value": "Jack Kinney"}, "label": "FILTERED_DF"}, {"name": "get_names", "arguments": {"data_source": "$FILTERED_DF$"}, "label": "SELECT_COL_0"}], "tools": [{"description": "Filters rows where the column's value is not equal to the given value.", "name": "select_data_not_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Return only the distinct elements from the input list.", "name": "select_unique_values", "arguments": {"unique_array": {"description": "A list of input data", "type": "array"}}}, {"description": "Filters rows where the column's value is equal to the given value.", "name": "select_data_equal_to", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}, {"description": "Lookup data director: the name of the director", "name": "get_directors", "arguments": {}}, {"description": "Lookup data name: unique movie name", "name": "get_names", "arguments": {}}, {"description": "Return the sum of values in a list.", "name": "compute_data_sum", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}}}, {"description": "Return the number of elements in a list.", "name": "compute_data_count", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}}}, {"description": "Filters rows where the column's value matches a regex pattern (applies to strings).", "name": "select_data_like", "arguments": {"data_source": {"description": "The location of the data file in csv format.", "type": "string"}, "key_name": {"description": "The key on which the filter will be applied.", "type": "string", "enum": ["ALLOWED_VALUES_FOR_KEY_NAME"]}, "value": {"description": "The value to compare against in the filtering operation.", "type": "object"}}}], "key_values_and_descriptions": [{"key_name": "name", "description": "unique movie name", "dtype": "string"}, {"key_name": "director", "description": "the name of the director", "dtype": "string"}], "gold_answer": ["Saludos Amigos", "Make Mine Music", "Fun and Fancy Free", "The Adventures of Ichabod and Mr. Toad"]}]}